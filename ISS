MSI: R1 = SE (Password [7:0]):		0101_ entered Password [7:0] _0001					Begin  equal pss: 010111001101_0001		nonEqual: 010100110010_0001
MHI: R1'MSB = Password [15:8]:		0110_ entered Password [15:8] _0001									  011010101011_0001				  011001010100_0001
MSI: R2 = SE (Password [23:16]):	0101_ entered Password [23:16] _0010								  010100100011_0010				  010111011100_0010
MHI: R2'MSB = Password [31:24]:		0110_ entered Password [31:24] _0010								  011000000001_0010				  011011111110_0010
MSI: R5 = SE (00):					0101_00000000_0101
MSI: R6 = SE (00):					0101_00000000_0110
MSI: R9 = SE (00):					0101_00000000_1001
MSI: R7 = SE(00):					0101_00000000_0111
MHI: R7'MSB = (0F):					0110_00001111_0111
MSI: R10 = SE(OrgPassword [7:0]):	0101_11001101_1010
MHI: R10'MSB = OrgPassword [15:8]:	0110_10101011_1010
MSI: R11 = SE(OrgPassword [23:16]):	0101_00100011_1011
MHI: R11'MSB = OrgPassword [31:24]: 0110_00000001_1011
STR: MEM(R7) = R10					0010_01001010_0111
ADI: R7 = R7 + SE(01):				1011_00000001_0111
STR: MEM(R7) = R11:					0010_01001011_0111
ADI: R7 = R7 + SE(01):				1011_00000001_0111	
MSI: R8 = SE(0F):					0101_00001111_1000
STR: MEM(R7) = R8					0010_01001000_0111
MSI: R12 = SE(FE)					0101_11111110_1100
LDR: R(9) = MEM(R7)					0010_00000111_1001									Wait
CMI: R9, SE(0F):					1111_00101111_1001
BRR: 00101, R12:					1111_01100101_1100                                  JMPWait (-23+21 = -2 = FE)
SUI: R7, 2:							1100_00000010_0111
LDR: R9 = MEM(R7):					0010_00000111_1001									Low
MSI: R5 = SE(00):					0101_00000000_0101
MSI: R13 = SE(01):					0101_00000001_1101
ANR: R14 = R9 & R13:				0011_11011001_1110									L Loop
ANR: R15 = R1 & R13:				0011_11010001_1111
CMR: R14, R15:						1111_00001110_1111
MSI: R12 = SE(34)					0101_00100010_1100
BRR: 00000, R12						1111_01100000_1100									JMP Low r6+1 if eq (66-32 = 34)
CMI: R5,15:							1111_00101111_0101									Low ch R5
MSI: R12 = SE(04)					0101_00000100_1100
BRR: 00000, R12						1111_01100000_1100									JMP high (39-35 = 4)
SHI: R13, 1:						1111_10010001_1101
ADI: R5 = R5 +1:					1011_00000001_0101
JMI: l Loop							0010_11110110_1100									(-38+28 = -10 = F6)
ADI: R7 = R7+1						1011_00000001_0111									High
LDR: R9 = MEM(R7):					0010_00000111_1001	
MSI: R5 = SE(00):					0101_00000000_0101
MSI: R13 = SE(01):					0101_00000001_1101
ANR: R14 = R9 & R13:				0011_11011001_1110									H Loop
ANR: R15 = R2 & R13:				0011_11010010_1111
CMR: R14, R15:						1111_00001110_1111
MSI: R12, SE(22)					0101_00010110_1100
BRR: 00000, R12						1111_01100000_1100									JMP High r6+1 if eq  (69- 47 = 22)
CMI: R5,15:							1111_00101111_0101									high ch R5
MSI  R12, SE(04)					0101_00000100_1100
BRR: 00000, jmp endch				1111_01100000_1100									JMP endch (54-50 = 4)
SHI: R13, 1:						1111_10010001_1101
ADI: R5 = R5 +1:					1011_00000001_0101
JMI: H Loop							0010_11110110_1010									(-53+43 = -10 = F6)								
MSI: R12 = SE(20)					0101_00100000_1100									endCH
CMR: R6, 12							1111_00000110_1100									
MSI: R12, SE(05)					0101_00000101_1100
BRR 00000, R12						1111_01100000_1100									JMP Passed if R6 = 32  (62-57 = 5)
ADI R7 = R7 + 15					1011_00001111_0111									Failed
MSI R11 = SE(00)					0101_00000000_1011
STR	MEM(R7) = R11					0010_01001011_0111
JMI Done							0010_11000100_1010									JMP Done (65-61 = 4)							
ADI R7 = R7 + 15					1011_00001111_0111									Passed	
STR: MEM(R7) = R8					0010_01001000_0111
SUI: R7 = R7 - (00010001)			1100_00010001_0111
STR: MEM(R7) = R4					0010_01000100_0111									done
ADI: R6 = R6 + 1					1011_00000001_0110									Low R6 +1
MSI: R0 = SE(DD)					0101_11011101_0000
JMR   R0, R3						0010_10000000_0011									(-68+33 = - 35 = DD)
ADI: R6 = R6 + 1					1011_00000001_0110									High R6 + 1
JMI: 101010, R3						0010_11101010_0011									(-70+48 = -22)

